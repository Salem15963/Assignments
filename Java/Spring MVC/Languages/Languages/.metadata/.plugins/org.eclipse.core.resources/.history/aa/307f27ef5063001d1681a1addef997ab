package com.codingdojo.booksapi.services;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.codingdojo.booksapi.models.Language;
import com.codingdojo.booksapi.repositories.LanguageRepository;

@Service
public class LanguageService {
    // adding the expense repository as a dependency
	private final LanguageRepository languageRepository;
    
    public LanguageService(LanguageRepository languageRepository) {
        this.languageRepository = languageRepository;
    }
    // returns all the language
    public List<Language> allLanguages() {
		return languageRepository.findAll();
    }
    // creates a language
    public Language createLanguage(Language b) {
        return languageRepository.save(b);
    }
    // retrieves a language
    public Language findLanguage(Long id) {
        Optional<Language> optionalLanguage = languageRepository.findById(id);
        if(optionalLanguage.isPresent()) {
            return optionalLanguage.get();
        } else {
            return null;
        }
    }

	public Language updateLanguage(Long id, String name, String creator, Double version) {
	     Language language = findLanguage(id);
	     if(language.getId()==id) {
	    	 language.setName(name);
	    	 language.setCreator(creator);
	    	 language.setVersion(version);
	    	 return languageRepository.save(language);
	     }
	     else {
	    	 return null;
	     }
	}

	public void deletelanguage(Long id) {
		languageRepository.deleteById(id);
	}
}