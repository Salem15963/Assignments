package com.codingdojo.booksapi.services;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.codingdojo.booksapi.models.Expense;
import com.codingdojo.booksapi.repositories.ExpenseRepository;

@Service
public class ExpenseService {
    // adding the book repository as a dependency
	private final ExpenseRepository bookRepository;
    
    public ExpenseService(ExpenseRepository bookRepository) {
        this.bookRepository = bookRepository;
    }
    // returns all the books
    public List<Expense> allBooks() {
        return bookRepository.findAll();
    }
    // creates a book
    public Expense createBook(Expense b) {
        return bookRepository.save(b);
    }
    // retrieves a book
    public Expense findBook(Long id) {
        Optional<Expense> optionalBook = bookRepository.findById(id);
        if(optionalBook.isPresent()) {
            return optionalBook.get();
        } else {
            return null;
        }
    }

	public Expense updateBook(Long id, String title, String desc, String lang, Integer numOfPages) {
	     Expense book = findBook(id);
	     if(book.getId()==id) {
	    	 book.setTitle(title);
	    	 book.setDescription(desc);
	    	 book.setLanguage(lang);
	    	 book.setNumberOfPages(numOfPages);
	    	 return createBook(book);
	     }
	     else {
	    	 return null;
	     }
	}

	public void deleteBook(Long id) {
		bookRepository.deleteById(id);
	}
}